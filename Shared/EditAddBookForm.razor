<div class="container mt-5">
    <div class="card">
        <div class="card-body">
            <h2 class="card-title">Add Book</h2>
            <hr />
            <EditForm Model="newBook" OnValidSubmit="AddNewBook">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <label for="Title">Title:</label>
                    <InputText id="Title" @bind-Value="newBook.Title" class="form-control" />
                    <ValidationMessage For="@(() => newBook.Title)" class="text-danger" />
                </div>

                <div class="form-group">
                    <label for="Description">Description:</label>
                    <InputTextArea id="Description" @bind-Value="newBook.Description" class="form-control" />
                    <ValidationMessage For="@(() => newBook.Description)" class="text-danger" />
                </div>

                <div class="form-group">
                    <label for="Authors">Authors:</label>
                    @foreach (var author in newBook.Authors)
                    {
                        <InputText @bind-Value="@author.Name" class="form-control mb-2" />
                        <ValidationMessage For="@(() => author.Name)" class="text-danger" />
                    }
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Add Book</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private BookDto newBook { get; set; } = new BookDto { Id = Guid.NewGuid() };

    [Parameter]
    public EventCallback<BookDto> OnBookAdded { get; set; }

    [Parameter]
    public EventCallback<BookDto> OnBookEdited { get; set; }

    private async Task AddNewBook()
    {
        await OnBookAdded.InvokeAsync(newBook);
        newBook = new BookDto { Id = Guid.NewGuid() };
    }

    private async Task EditBook()
    {
        await OnBookEdited.InvokeAsync(newBook);
        newBook = new BookDto { Id = Guid.NewGuid() };
    }
}
