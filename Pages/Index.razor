@page "/"

<div class="container mt-5">
    <h1 class="text-center mb-4">Book List</h1>

    <table class="table table-bordered">
        <thead class="thead-light">
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Description</th>
                <th>Authors</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in books)
            {
                <tr>
                    <td>@book.Id</td>
                    <td>@book.Title</td>
                    <td>@book.Description</td>
                    <td>
                        <ul>
                            @foreach (var author in book.Authors)
                            {
                                <li>@author.Name</li>
                            }
                        </ul>
                    </td>
                    <td>
                        <button class="btn btn-primary btn-sm" @onclick="() => EditBook(book)">Edit</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteBook(book.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<AddBook OnBookAdded="AddNewBook" OnBookEdited="EditBook" />

@code {
    private List<BookDto> books = new List<BookDto>()
    {
        new BookDto { Id = Guid.NewGuid(), Title = "Book 1", Description = "Description 1", Authors = new List<AuthorDto> { new AuthorDto { Id = Guid.NewGuid(), Name = "Author 1" }, new AuthorDto { Id = Guid.NewGuid(), Name = "Author 1" } } },
        new BookDto { Id = Guid.NewGuid(), Title = "Book 2", Description = "Description 2", Authors = new List<AuthorDto> { new AuthorDto { Id = Guid.NewGuid(), Name = "Author 2" } } },
        new BookDto { Id = Guid.NewGuid(), Title = "Book 3", Description = "Description 3", Authors = new List<AuthorDto> { new AuthorDto { Id = Guid.NewGuid(), Name = "Author 3" } } },
        new BookDto { Id = Guid.NewGuid(), Title = "Book 4", Description = "Description 4", Authors = new List<AuthorDto> { new AuthorDto { Id = Guid.NewGuid(), Name = "Author 4" } } },
    };

    private void DeleteBook(Guid id)
    {
        this.books.RemoveAll(b => b.Id == id);
    }

    private async Task AddNewBook(BookDto book)
    {
        this.books.Add(book);
    }

    private async Task EditBook(BookDto book)
    {
        var bookToEdit = this.books.FirstOrDefault(b => b.Id == book.Id);
        if (bookToEdit != null)
        {
            bookToEdit.Title = book.Title;
            bookToEdit.Description = book.Description;
            bookToEdit.Authors = book.Authors;
        }
    }
}
